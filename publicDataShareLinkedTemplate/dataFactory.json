{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
       "factoryName": {
            "type": "string",
            "metadata": {
             "description": "The name of data factory can contain only letters, numbers and hyphens. The first and last characters must be a letter or number. Spaces are not allowed."
             }

        },
        "storageAccountName": {
             "type": "string",
             "metadata": {
             "description": "The storage account name can contain only lowercase letters and numbers. Name must be between 1 and 11 characters."
             }
        },

        "location": {
             "type": "string",
             "metadata": {
             "description": "Location of your resources. Default location is eastUS"
            }
         },
         
        "connection_name": {
            "type": "String",
            "metadata": {
             "description": "The name must begin with a letter or number, end with a letter, number or underscore, and may contain only letters, numbers, underscores, periods, or hyphens."
            }
        },
       
        "actionGroupsName": {
            "type": "String",
            "metadata": {
             "description": "The name can contain letters, numbers, and special characters, this can start or end with any number, letter or other special charactor"
            }
        },
        "appLogicName": {
            "type": "String",
            "metadata": {
             "description": "The name can only contain letters, numbers, and '-', '(', ')', '_' or '.'"
            }
        },
        "emailForAlerts": {
            "type": "String"
        },
        "SinkDataToSql": {
            "allowedValues": [ "Yes", "No" ],
            "type": "string",
            "metadata": {
                "description": "Do you want to create sql database and server and write data to sqldb?"
            }
        },
    
        "databaseName": {
             "type": "string",
             "metadata": {
             "description": "Database name should not match special patterns,The value has a length of at most 115. Database name should not contain reserved words.No database with the same name exists in the server"
            }
        },
        "sqlServerName": {
           "type": "string",
            "metadata": {
            "description": "Server name must be at least 1 characters and at most 50 characters. Server name must only contain lowercase letters, numbers, and hyphens. The server name must not start or end in a hyphen."
            } 
        },

       "administratorLogin": {
             "type": "string",
             "metadata": {
             "description": "Your login name must not contain a SQL Identifier or a typical system name (like admin, administrator, sa, root, dbmanager, loginmanager, etc.) or a built-in database user or role (like dbo, guest, public, etc.). "
             }
        },
       "administratorLoginPassword": {
            "type": "securestring",
             "metadata": {
             "description": "Your password must be at least 8 characters in length. It must be no more than 128 characters in length.Your password must contain characters from three of the following categories â€“ English uppercase letters, English lowercase letters, numbers (0-9), and non-alphanumeric characters (!, $, #, %, etc.). Your password cannot contain all or part of the login name. Part of a login name is defined as three or more consecutive alphanumeric characters."
              }
        },

        "currentTime": {
            "type": "string",
            "defaultValue": "[utcNow('u')]"
        }
  },
  "variables": {
        "factoryId": "[resourceId('Microsoft.DataFactory/factories/', parameters('factoryName'))]",
        "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
        "fullyQualifiedDomainName": ".database.windows.net"
    },
  "resources": [
      {
            "type": "Microsoft.DataFactory/factories",
            "apiVersion": "2018-06-01",
            "name": "[parameters('factoryName')]",
            "location": "[parameters('location')]",
            "properties": {},
            "identity": {
                "type": "SystemAssigned"
                 }
        },
         {
            "name": "[concat(parameters('factoryName'), '/rest_source_dataset')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "using rest api",
                "linkedServiceName": {
                    "referenceName": "RestApiLinkedService",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "relativeUrl": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "CovidDefinitiveHC/Sources"
                },
                "annotations": [],
                "type": "RestResource",
                "typeProperties": {
                    "relativeUrl": {
                        "value": "@dataset().relativeUrl",
                        "type": "Expression"
                    }
                },
                "schema": []
            },
            "dependsOn": [
                "[parameters('factoryName')]",
                "[concat(variables('factoryId'), '/linkedServices/RestApiLinkedService')]"
            ]
        },

        {
            "name": "[concat(parameters('factoryName'), '/csv_sinkonly_dataset')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureBlobStorageLinkedService",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "directory": {
                        "type": "string"
                    },
                    "file": {
                        "type": "string"
                    },
                    "container": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "CovidDefinitiveHC/Sinks"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "folderPath": {
                            "value": "@dataset().directory",
                            "type": "Expression"
                        },
                        "container": {
                            "value": "@dataset().container",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": [
                "[parameters('factoryName')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageLinkedService')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/source_csv_dataset')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureBlobStorageLinkedService",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "directory": {
                        "type": "string"
                    },
                    "file": {
                        "type": "string"
                    },
                    "container": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "CovidDefinitiveHC/Sources"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": {
                            "value": "@dataset().file",
                            "type": "Expression"
                        },
                        "folderPath": {
                            "value": "@dataset().directory",
                            "type": "Expression"
                        },
                        "container": {
                            "value": "@dataset().container",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": [
                "[parameters('factoryName')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageLinkedService')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/json_dataset')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureBlobStorageLinkedService",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "container": {
                        "type": "string"
                    },
                    "directory": {
                        "type": "string"
                    },
                    "file": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "CovidDefinitiveHC/Sinks"
                },
                "annotations": [],
                "type": "Json",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": {
                            "value": "@dataset().file",
                            "type": "Expression"
                        },
                        "folderPath": {
                            "value": "@dataset().directory",
                            "type": "Expression"
                        },
                        "container": {
                            "value": "@dataset().container",
                            "type": "Expression"
                        }
                    }
                },
                "schema": {}
            },
            "dependsOn": [
                "[parameters('factoryName')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageLinkedService')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/parquet_dataset')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureBlobStorageLinkedService",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "container": {
                        "type": "string"
                    },
                    "directory": {
                        "type": "string"
                    },
                    "file": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "CovidDefinitiveHC/Sinks"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "folderPath": {
                            "value": "@dataset().directory",
                            "type": "Expression"
                        },
                        "container": {
                            "value": "@dataset().container",
                            "type": "Expression"
                        }
                    },
                    "compressionCodec": "snappy"
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageLinkedService')]"
            ]
        },

       {
            "condition": "[equals(parameters('SinkDataToSql'),'Yes')]",
            "name": "[concat(parameters('factoryName'), '/sql_sink_dataset')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureSqlDatabaseLinkedService",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "tablename": {
                        "type": "string",
                        "defaultValue": "covidDataset"
                    },
                    "schemaName": {
                        "type": "string",
                        "defaultValue": "db_asad"
                    }
                },
                "folder": {
                    "name": "CovidDefinitiveHC/Sinks"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {
                    "schema": {
                        "value": "@dataset().schemaName",
                        "type": "Expression"
                    },
                    "table": {
                        "value": "@dataset().TableName",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[parameters('factoryName')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseLinkedService')]"
            ]
        },

        {
            "condition": "[equals(parameters('SinkDataToSql'),'Yes')]",
            "name": "[concat(parameters('factoryName'), '/PreviousTable')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureSqlDatabaseLinkedService",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "PreviousTableName": {
                        "type": "string",
                        "defaultValue": "previousTable"
                    },
                    "schemaName": {
                        "type": "string",
                        "defaultValue": "db_asad"
                    }
                },
                "folder": {
                    "name": "CovidDefinitiveHC/Schema"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {
                    "schema": {
                        "value": "@dataset().schemaName",
                        "type": "Expression"
                    },
                    "table": {
                        "value": "@dataset().PreviousTableName",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[parameters('factoryName')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseLinkedService')]"
            ]
        },
        {
            "condition": "[equals(parameters('SinkDataToSql'),'Yes')]",
            "name": "[concat(parameters('factoryName'), '/PreviousTableSave')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureSqlDatabaseLinkedService",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "previousTableSaveName": {
                        "type": "string",
                        "defaultValue": "previousTableSaveCopy"
                    },
                    "schemaName": {
                        "type": "string",
                        "defaultValue": "db_asad"
                    }
                },
                "folder": {
                    "name": "CovidDefinitiveHC/Schema"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {
                    "schema": {
                        "value": "@dataset().schemaName",
                        "type": "Expression"
                    },
                    "table": {
                        "value": "@dataset().previousTableSaveName",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[parameters('factoryName')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseLinkedService')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/PreviousData')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureBlobStorageLinkedService",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "CovidDefinitiveHC/Schema"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": "previousDataset.csv",
                        "folderPath": "prevData",
                        "container": "schemadetection"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": [
                "[parameters('factoryName')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageLinkedService')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/get_previous_data_copy')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureBlobStorageLinkedService",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "CovidDefinitiveHC/Schema"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": "GetPrevSchemaCopy.csv",
                        "folderPath": "GetPrevDataCopy",
                        "container": "schemadetection"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": [
                "[parameters('factoryName')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageLinkedService')]"
            ]
        },
        {
            "condition": "[equals(parameters('SinkDataToSql'),'Yes')]",
            "name": "[concat(parameters('factoryName'), '/save_store_proc_result_table')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureSqlDatabaseLinkedService",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "storeProcTable": {
                        "type": "string",
                        "defaultValue": "storeProcTable"
                    },
                    "schemaName": {
                        "type": "string",
                        "defaultValue": "db_asad"
                    }
                },
                "folder": {
                    "name": "CovidDefinitiveHC/Schema"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {
                    "schema": {
                        "value": "@dataset().schemaName",
                        "type": "Expression"
                    },
                    "table": {
                        "value": "@dataset().storeProcTable",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[parameters('factoryName')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseLinkedService')]"
            ]
        },
        {
            "condition": "[equals(parameters('SinkDataToSql'),'No')]",
            "name": "[concat(parameters('factoryName'), '/Transformations_without_SQL_sink')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "CovidDefinitiveHC"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "source_csv_dataset",
                                "type": "DatasetReference"
                            },
                            "name": "SourceCSV"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "parquet_dataset",
                                "type": "DatasetReference"
                            },
                            "name": "SinkParquet"
                        },
                        {
                            "dataset": {
                                "referenceName": "parquet_dataset",
                                "type": "DatasetReference"
                            },
                            "name": "SinkLatestParquet"
                        },
                        {
                            "dataset": {
                                "referenceName": "json_dataset",
                                "type": "DatasetReference"
                            },
                            "name": "sinkJsonl"
                        },
                        {
                            "dataset": {
                                "referenceName": "csv_sinkonly_dataset",
                                "type": "DatasetReference"
                            },
                            "name": "sinkCSV"
                        },
                        {
                            "dataset": {
                                "referenceName": "csv_sinkonly_dataset",
                                "type": "DatasetReference"
                            },
                            "name": "sinkLatestCSV"
                        },
                        {
                            "dataset": {
                                "referenceName": "json_dataset",
                                "type": "DatasetReference"
                            },
                            "name": "sinkLatestJsonl"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "AddColumns",
                            "description": "add load date and time"
                        },
                        {
                            "name": "HeadingsModify",
                            "description": "Capitalize first letter of each word and give underscore between space"
                        },
                        {
                            "name": "RoundOfFColumns",
                            "description": "Round off Latitude and Longitude upto 3 decimal points"
                        },
                        {
                            "name": "Rename"
                        },
                        {
                            "name": "RearrangeColumns1"
                        }
                    ],
                    "script": "parameters{\n\tfilename as string ('covid_tracking'),\n\trunid as string ('runtime_guid')\n}\nsource(output(\n\t\tOBJECTID as short,\n\t\tHOSPITAL_NAME as string,\n\t\tHOSPITAL_TYPE as string,\n\t\tHQ_ADDRESS as string,\n\t\tHQ_ADDRESS1 as string,\n\t\tHQ_CITY as string,\n\t\tHQ_STATE as string,\n\t\tHQ_ZIP_CODE as integer,\n\t\tCOUNTY_NAME as string,\n\t\tSTATE_NAME as string,\n\t\tSTATE_FIPS as short,\n\t\tCNTY_FIPS as short,\n\t\tFIPS as integer,\n\t\tNUM_LICENSED_BEDS as short,\n\t\tNUM_STAFFED_BEDS as short,\n\t\tNUM_ICU_BEDS as short,\n\t\tADULT_ICU_BEDS as short,\n\t\tPEDI_ICU_BEDS as short,\n\t\tBED_UTILIZATION as double,\n\t\tPotential_Increase_In_Bed_Capac as short,\n\t\tAVG_VENTILATOR_USAGE as short,\n\t\tx as double,\n\t\ty as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tinferDriftedColumnTypes: true) ~> SourceCSV\nSourceCSV derive(load_date = currentDate('UTC'),\n\t\tload_time = currentUTC('yyyy-MM-dd')) ~> AddColumns\nAddColumns select(mapColumn(\n\t\teach(patternMatch(`.*`),\n\t\t\tregexReplace(initCap(regexReplace($$,'_',' ')),' ','_') = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> HeadingsModify\nRearrangeColumns1 derive(Longitude = round(Longitude, 3),\n\t\tLatitude = round(Latitude, 3)) ~> RoundOfFColumns\nHeadingsModify select(mapColumn(\n\t\tRow_Id = Objectid,\n\t\tHospital_Name,\n\t\tHospital_Type,\n\t\tHq_Address,\n\t\tHq_Address1,\n\t\tHq_City,\n\t\tHq_State,\n\t\tHq_Zip_Code,\n\t\tCounty_Name,\n\t\tState_Name,\n\t\tState_Fips,\n\t\tCnty_Fips,\n\t\tFips,\n\t\tNum_Licensed_Beds,\n\t\tNum_Staffed_Beds,\n\t\tNum_Icu_Beds,\n\t\tAdult_Icu_Beds,\n\t\tPedi_Icu_Beds,\n\t\tBed_Utilization,\n\t\tPotential_Increase_In_Bed_Capac,\n\t\tAvg_Ventilator_Usage,\n\t\tLongitude = X,\n\t\tLatitude = Y,\n\t\tLoad_Date,\n\t\tLoad_Time\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Rename\nRename select(mapColumn(\n\t\tRow_Id,\n\t\tLoad_Date,\n\t\tLoad_Time,\n\t\tLongitude,\n\t\tLatitude,\n\t\tHospital_Name,\n\t\tHospital_Type,\n\t\tHq_Address,\n\t\tHq_Address1,\n\t\tHq_City,\n\t\tHq_State,\n\t\tHq_Zip_Code,\n\t\tCounty_Name,\n\t\tState_Name,\n\t\tState_Fips,\n\t\tCnty_Fips,\n\t\tFips,\n\t\tNum_Licensed_Beds,\n\t\tNum_Staffed_Beds,\n\t\tNum_Icu_Beds,\n\t\tAdult_Icu_Beds,\n\t\tPedi_Icu_Beds,\n\t\tBed_Utilization,\n\t\tPotential_Increase_In_Bed_Capac,\n\t\tAvg_Ventilator_Usage\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RearrangeColumns1\nRoundOfFColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:[(concat($filename,'_', $runid,'.parquet'))],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SinkParquet\nRoundOfFColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:[(concat($filename, '.parquet'))],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SinkLatestParquet\nRoundOfFColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:[(concat($filename,'_', $runid,'.jsonl'))],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sinkJsonl\nRoundOfFColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:[(concat($filename,'_', $runid,'.csv'))],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sinkCSV\nRoundOfFColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:[(concat($filename, '.csv'))],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sinkLatestCSV\nRoundOfFColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:[(concat($filename, '.jsonl'))],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sinkLatestJsonl"
                }
            },
            "dependsOn": [
                "[parameters('factoryName')]",
                "[concat(variables('factoryId'), '/datasets/source_csv_dataset')]",
                "[concat(variables('factoryId'), '/datasets/parquet_dataset')]",
                "[concat(variables('factoryId'), '/datasets/json_dataset')]",
                "[concat(variables('factoryId'), '/datasets/csv_sinkonly_dataset')]",
                "[concat(variables('factoryId'), '/datasets/PreviousData')]",
                "[concat(variables('factoryId'), '/datasets/get_previous_data_copy')]"
            ]
        },
         
        {
            "condition": "[equals(parameters('SinkDataToSql'),'Yes')]",
            "name": "[concat(parameters('factoryName'), '/Transformations_with_SQL_sink')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "CovidDefinitiveHC"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "source_csv_dataset",
                                "type": "DatasetReference"
                            },
                            "name": "SourceCSV"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "parquet_dataset",
                                "type": "DatasetReference"
                            },
                            "name": "SinkParquet"
                        },
                        {
                            "dataset": {
                                "referenceName": "parquet_dataset",
                                "type": "DatasetReference"
                            },
                            "name": "SinkLatestParquet"
                        },
                        {
                            "dataset": {
                                "referenceName": "json_dataset",
                                "type": "DatasetReference"
                            },
                            "name": "sinkJsonl"
                        },
                        {
                            "dataset": {
                                "referenceName": "csv_sinkonly_dataset",
                                "type": "DatasetReference"
                            },
                            "name": "sinkCSV"
                        },
                        {
                            "dataset": {
                                "referenceName": "csv_sinkonly_dataset",
                                "type": "DatasetReference"
                            },
                            "name": "sinkLatestCSV"
                        },
                        {
                            "dataset": {
                                "referenceName": "json_dataset",
                                "type": "DatasetReference"
                            },
                            "name": "sinkLatestJsonl"
                        },
                        {
                            "dataset": {
                                "referenceName": "sql_sink_dataset",
                                "type": "DatasetReference"
                            },
                            "name": "sinkDatabase"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "AddColumns",
                            "description": "add load date and time"
                        },
                        {
                            "name": "RoundOfFColumns",
                            "description": "Round off Latitude and Longitude upto 3 decimal points"
                        },
                        {
                            "name": "HeadingsMofify"
                        },
                        {
                            "name": "Rename"
                        },
                        {
                            "name": "Rearrange"
                        }
                    ],
                    "script": "parameters{\n\tfilename as string ('covid_tracking'),\n\trunid as string ('runtime_guid')\n}\nsource(output(\n\t\tOBJECTID as short,\n\t\tHOSPITAL_NAME as string,\n\t\tHOSPITAL_TYPE as string,\n\t\tHQ_ADDRESS as string,\n\t\tHQ_ADDRESS1 as string,\n\t\tHQ_CITY as string,\n\t\tHQ_STATE as string,\n\t\tHQ_ZIP_CODE as integer,\n\t\tCOUNTY_NAME as string,\n\t\tSTATE_NAME as string,\n\t\tSTATE_FIPS as short,\n\t\tCNTY_FIPS as short,\n\t\tFIPS as integer,\n\t\tNUM_LICENSED_BEDS as short,\n\t\tNUM_STAFFED_BEDS as short,\n\t\tNUM_ICU_BEDS as short,\n\t\tADULT_ICU_BEDS as short,\n\t\tPEDI_ICU_BEDS as short,\n\t\tBED_UTILIZATION as double,\n\t\tPotential_Increase_In_Bed_Capac as short,\n\t\tAVG_VENTILATOR_USAGE as short,\n\t\tx as double,\n\t\ty as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tinferDriftedColumnTypes: true) ~> SourceCSV\nSourceCSV derive(load_date = currentDate('UTC'),\n\t\tload_time = currentUTC('yyyy-MM-dd')) ~> AddColumns\nRearrange derive(Longitude = round(Longitude, 3),\n\t\tLatitude = round(Latitude, 3)) ~> RoundOfFColumns\nAddColumns select(mapColumn(\n\t\teach(patternMatch(`.*`),\n\t\t\tregexReplace(initCap(regexReplace($$,'_',' ')),' ','_') = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> HeadingsMofify\nHeadingsMofify select(mapColumn(\n\t\tRow_Id = Objectid,\n\t\tHospital_Name,\n\t\tHospital_Type,\n\t\tHq_Address,\n\t\tHq_Address1,\n\t\tHq_City,\n\t\tHq_State,\n\t\tHq_Zip_Code,\n\t\tCounty_Name,\n\t\tState_Name,\n\t\tState_Fips,\n\t\tCnty_Fips,\n\t\tFips,\n\t\tNum_Licensed_Beds,\n\t\tNum_Staffed_Beds,\n\t\tNum_Icu_Beds,\n\t\tAdult_Icu_Beds,\n\t\tPedi_Icu_Beds,\n\t\tBed_Utilization,\n\t\tPotential_Increase_In_Bed_Capac,\n\t\tAvg_Ventilator_Usage,\n\t\tLongitude = X,\n\t\tLatitude = Y,\n\t\tLoad_Date,\n\t\tLoad_Time\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Rename\nRename select(mapColumn(\n\t\tRow_Id,\n\t\tLoad_Date,\n\t\tLoad_Time,\n\t\tLongitude,\n\t\tLatitude,\n\t\tHospital_Name,\n\t\tHospital_Type,\n\t\tHq_Address,\n\t\tHq_Zip_Code,\n\t\tHq_Address1,\n\t\tHq_City,\n\t\tHq_State,\n\t\tCounty_Name,\n\t\tState_Name,\n\t\tState_Fips,\n\t\tCnty_Fips,\n\t\tFips,\n\t\tNum_Licensed_Beds,\n\t\tNum_Staffed_Beds,\n\t\tNum_Icu_Beds,\n\t\tAdult_Icu_Beds,\n\t\tPedi_Icu_Beds,\n\t\tBed_Utilization,\n\t\tPotential_Increase_In_Bed_Capac,\n\t\tAvg_Ventilator_Usage\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Rearrange\nRoundOfFColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:[(concat($filename,'_', $runid,'.parquet'))],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SinkParquet\nRoundOfFColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:[(concat($filename, '.parquet'))],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SinkLatestParquet\nRoundOfFColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:[(concat($filename,'_', $runid,'.jsonl'))],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sinkJsonl\nRoundOfFColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:[(concat($filename,'_', $runid,'.csv'))],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sinkCSV\nRoundOfFColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:[(concat($filename, '.csv'))],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sinkLatestCSV\nRoundOfFColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:[(concat($filename, '.jsonl'))],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sinkLatestJsonl\nRoundOfFColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sinkDatabase"
                }
            },
            "dependsOn": [
                "[parameters('factoryName')]",
                "[concat(variables('factoryId'), '/datasets/source_csv_dataset')]",
                "[concat(variables('factoryId'), '/datasets/parquet_dataset')]",
                "[concat(variables('factoryId'), '/datasets/json_dataset')]",
                "[concat(variables('factoryId'), '/datasets/csv_sinkonly_dataset')]",
                "[concat(variables('factoryId'), '/datasets/sql_sink_dataset')]",
                "[concat(variables('factoryId'), '/datasets/PreviousData')]",
                "[concat(variables('factoryId'), '/datasets/get_previous_data_copy')]"
            ]
        },
        {
            "condition": "[equals(parameters('SinkDataToSql'),'No')]",
            "name": "[concat(parameters('factoryName'), '/Covid_Tracking_DefinitiveHC_Without_Sql_Sink')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Covid Tracking (Cases/Deaths): https://covidtracking.com/api/v1/states/daily.json",
                "activities": [
                    {
                        "name": "To Raw Partition",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "RestSource",
                                "httpRequestTimeout": "00:01:40",
                                "requestInterval": "00.00:00:00.010",
                                "requestMethod": "GET"
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "path": "[['attributes']['OBJECTID']"
                                        },
                                        "sink": {
                                            "name": "OBJECTID",
                                            "type": "Int64"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['HOSPITAL_NAME']"
                                        },
                                        "sink": {
                                            "name": "HOSPITAL_NAME",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['HOSPITAL_TYPE']"
                                        },
                                        "sink": {
                                            "name": "HOSPITAL_TYPE",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['HQ_ADDRESS']"
                                        },
                                        "sink": {
                                            "name": "HQ_ADDRESS",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['HQ_ADDRESS1']"
                                        },
                                        "sink": {
                                            "name": "HQ_ADDRESS1",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['HQ_CITY']"
                                        },
                                        "sink": {
                                            "name": "HQ_CITY",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['HQ_STATE']"
                                        },
                                        "sink": {
                                            "name": "HQ_STATE",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['HQ_ZIP_CODE']"
                                        },
                                        "sink": {
                                            "name": "HQ_ZIP_CODE",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['COUNTY_NAME']"
                                        },
                                        "sink": {
                                            "name": "COUNTY_NAME",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['STATE_NAME']"
                                        },
                                        "sink": {
                                            "name": "STATE_NAME",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['STATE_FIPS']"
                                        },
                                        "sink": {
                                            "name": "STATE_FIPS",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['CNTY_FIPS']"
                                        },
                                        "sink": {
                                            "name": "CNTY_FIPS",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['FIPS']"
                                        },
                                        "sink": {
                                            "name": "FIPS",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['NUM_LICENSED_BEDS']"
                                        },
                                        "sink": {
                                            "name": "NUM_LICENSED_BEDS",
                                            "type": "Int64"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['NUM_STAFFED_BEDS']"
                                        },
                                        "sink": {
                                            "name": "NUM_STAFFED_BEDS",
                                            "type": "Int64"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['NUM_ICU_BEDS']"
                                        },
                                        "sink": {
                                            "name": "NUM_ICU_BEDS",
                                            "type": "Int64"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['ADULT_ICU_BEDS']"
                                        },
                                        "sink": {
                                            "name": "ADULT_ICU_BEDS",
                                            "type": "Int64"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['PEDI_ICU_BEDS']"
                                        },
                                        "sink": {
                                            "name": "PEDI_ICU_BEDS",
                                            "type": "Single"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['BED_UTILIZATION']"
                                        },
                                        "sink": {
                                            "name": "BED_UTILIZATION",
                                            "type": "Single"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['Potential_Increase_In_Bed_Capac']"
                                        },
                                        "sink": {
                                            "name": "Potential_Increase_In_Bed_Capac",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['AVG_VENTILATOR_USAGE']"
                                        },
                                        "sink": {
                                            "name": "AVG_VENTILATOR_USAGE",
                                            "type": "Single"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['geometry']['x']"
                                        },
                                        "sink": {
                                            "name": "x",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['geometry']['y']"
                                        },
                                        "sink": {
                                            "name": "y",
                                            "type": "Double"
                                        }
                                    }
                                ],
                                "collectionReference": "$['features']",
                                "mapComplexValuesToString": true
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "rest_source_dataset",
                                "type": "DatasetReference",
                                "parameters": {
                                    "relativeUrl": {
                                        "value": "@pipeline().parameters.sourceRelativeUrl",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "source_csv_dataset",
                                "type": "DatasetReference",
                                "parameters": {
                                    "directory": {
                                        "value": "@concat(pipeline().parameters.rawBlobDirectory,'/',formatDateTime(utcnow(),'yyyy/MM/dd'))",
                                        "type": "Expression"
                                    },
                                    "file": {
                                        "value": "@concat(pipeline().parameters.sourceFilename,'_',pipeline().RunId,'.csv')",
                                        "type": "Expression"
                                    },
                                    "container": {
                                        "value": "@pipeline().parameters.blobContainer",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "To Raw Overwrite",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "RestSource",
                                "httpRequestTimeout": "00:01:40",
                                "requestInterval": "00.00:00:00.010",
                                "requestMethod": "GET"
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "path": "[['attributes']['OBJECTID']"
                                        },
                                        "sink": {
                                            "name": "OBJECTID",
                                            "type": "Int64"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['HOSPITAL_NAME']"
                                        },
                                        "sink": {
                                            "name": "HOSPITAL_NAME",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['HOSPITAL_TYPE']"
                                        },
                                        "sink": {
                                            "name": "HOSPITAL_TYPE",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['HQ_ADDRESS']"
                                        },
                                        "sink": {
                                            "name": "HQ_ADDRESS",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['HQ_ADDRESS1']"
                                        },
                                        "sink": {
                                            "name": "HQ_ADDRESS1",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['HQ_CITY']"
                                        },
                                        "sink": {
                                            "name": "HQ_CITY",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['HQ_STATE']"
                                        },
                                        "sink": {
                                            "name": "HQ_STATE",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['HQ_ZIP_CODE']"
                                        },
                                        "sink": {
                                            "name": "HQ_ZIP_CODE",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['COUNTY_NAME']"
                                        },
                                        "sink": {
                                            "name": "COUNTY_NAME",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['STATE_NAME']"
                                        },
                                        "sink": {
                                            "name": "STATE_NAME",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['STATE_FIPS']"
                                        },
                                        "sink": {
                                            "name": "STATE_FIPS",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['CNTY_FIPS']"
                                        },
                                        "sink": {
                                            "name": "CNTY_FIPS",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['FIPS']"
                                        },
                                        "sink": {
                                            "name": "FIPS",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['NUM_LICENSED_BEDS']"
                                        },
                                        "sink": {
                                            "name": "NUM_LICENSED_BEDS",
                                            "type": "Int64"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['NUM_STAFFED_BEDS']"
                                        },
                                        "sink": {
                                            "name": "NUM_STAFFED_BEDS",
                                            "type": "Int64"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['NUM_ICU_BEDS']"
                                        },
                                        "sink": {
                                            "name": "NUM_ICU_BEDS",
                                            "type": "Int64"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['ADULT_ICU_BEDS']"
                                        },
                                        "sink": {
                                            "name": "ADULT_ICU_BEDS",
                                            "type": "Int64"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['PEDI_ICU_BEDS']"
                                        },
                                        "sink": {
                                            "name": "PEDI_ICU_BEDS",
                                            "type": "Single"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['BED_UTILIZATION']"
                                        },
                                        "sink": {
                                            "name": "BED_UTILIZATION",
                                            "type": "Single"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['Potential_Increase_In_Bed_Capac']"
                                        },
                                        "sink": {
                                            "name": "Potential_Increase_In_Bed_Capac",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['AVG_VENTILATOR_USAGE']"
                                        },
                                        "sink": {
                                            "name": "AVG_VENTILATOR_USAGE",
                                            "type": "Single"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['geometry']['x']"
                                        },
                                        "sink": {
                                            "name": "x",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['geometry']['y']"
                                        },
                                        "sink": {
                                            "name": "y",
                                            "type": "Double"
                                        }
                                    }
                                ],
                                "collectionReference": "$['features']",
                                "mapComplexValuesToString": true
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "rest_source_dataset",
                                "type": "DatasetReference",
                                "parameters": {
                                    "relativeUrl": {
                                        "value": "@pipeline().parameters.sourceRelativeUrl",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "source_csv_dataset",
                                "type": "DatasetReference",
                                "parameters": {
                                    "directory": {
                                        "value": "@concat(pipeline().parameters.rawBlobDirectory, '/latest')",
                                        "type": "Expression"
                                    },
                                    "file": {
                                        "value": "@pipeline().parameters.sourceFilename",
                                        "type": "Expression"
                                    },
                                    "container": {
                                        "value": "@pipeline().parameters.blobContainer",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "CovidTracking_Dataflow",
                        "description": "Covid Tracking\nhttps://services7.arcgis.com/LXCny1HyhQCUSueu/arcgis/rest/services/Definitive_Healthcare_USA_Hospital_Beds/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [
                            {
                                "activity": "IfCurrentSchemahasMoreColumns",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "IfCurrentSchemaHasLessColumns",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "IfCurrentSchemaHasSameColumnbutDifferentArrangement",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "Transformations_without_SQL_sink",
                                "type": "DataFlowReference",
                                "parameters": {
                                    "filename": {
                                        "value": "'@{pipeline().parameters.filename}'",
                                        "type": "Expression"
                                    },
                                    "runid": {
                                        "value": "'@{pipeline().RunId}'",
                                        "type": "Expression"
                                    }
                                },
                                "datasetParameters": {
                                    "SourceCSV": {
                                        "directory": {
                                            "value": "@concat(pipeline().parameters.rawBlobDirectory, '/latest')",
                                            "type": "Expression"
                                        },
                                        "file": {
                                            "value": "@pipeline().parameters.sourceFilename",
                                            "type": "Expression"
                                        },
                                        "container": {
                                            "value": "@pipeline().parameters.blobContainer",
                                            "type": "Expression"
                                        }
                                    },
                                    "SinkParquet": {
                                        "container": {
                                            "value": "@pipeline().parameters.blobContainer",
                                            "type": "Expression"
                                        },
                                        "directory": {
                                            "value": "@concat(pipeline().parameters.curatedBlobDirectory,'/',formatdatetime(utcnow(),'yyyy/MM/dd'))",
                                            "type": "Expression"
                                        },
                                        "file": "specified in data flow"
                                    },
                                    "SinkLatestParquet": {
                                        "container": {
                                            "value": "@pipeline().parameters.blobContainer",
                                            "type": "Expression"
                                        },
                                        "directory": {
                                            "value": "@concat(pipeline().parameters.curatedBlobDirectory,'/latest')",
                                            "type": "Expression"
                                        },
                                        "file": "specified in data flow"
                                    },
                                    "sinkJsonl": {
                                        "container": {
                                            "value": "@pipeline().parameters.blobContainer",
                                            "type": "Expression"
                                        },
                                        "directory": {
                                            "value": "@concat(pipeline().parameters.curatedBlobDirectory,'/',formatdatetime(utcnow(),'yyyy/MM/dd'))",
                                            "type": "Expression"
                                        },
                                        "file": "specified in data flow"
                                    },
                                    "sinkCSV": {
                                        "directory": {
                                            "value": "@concat(pipeline().parameters.curatedBlobDirectory,'/',formatdatetime(utcnow(),'yyyy/MM/dd'))",
                                            "type": "Expression"
                                        },
                                        "file": "specified in data flow",
                                        "container": {
                                            "value": "@pipeline().parameters.blobContainer",
                                            "type": "Expression"
                                        }
                                    },
                                    "sinkLatestCSV": {
                                        "directory": {
                                            "value": "@concat(pipeline().parameters.curatedBlobDirectory,'/latest')",
                                            "type": "Expression"
                                        },
                                        "file": {
                                            "value": "@concat(pipeline().parameters.filename,'.csv')",
                                            "type": "Expression"
                                        },
                                        "container": {
                                            "value": "@pipeline().parameters.blobContainer",
                                            "type": "Expression"
                                        }
                                    },
                                    "sinkLatestJsonl": {
                                        "container": {
                                            "value": "@pipeline().parameters.blobContainer",
                                            "type": "Expression"
                                        },
                                        "directory": {
                                            "value": "@concat(pipeline().parameters.curatedBlobDirectory,'/latest')",
                                            "type": "Expression"
                                        },
                                        "file": {
                                            "value": "@concat(pipeline().parameters.filename,'.jsonl')",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            },
                            "staging": {},
                            "compute": {
                                "coreCount": 8,
                                "computeType": "General"
                            },
                            "traceLevel": "Fine"
                        }
                    },
                    {
                        "name": "JSONL to JSON LATEST",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "CovidTracking_Dataflow",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "JsonSource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true
                                },
                                "formatSettings": {
                                    "type": "JsonReadSettings"
                                }
                            },
                            "sink": {
                                "type": "JsonSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "JsonWriteSettings"
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "json_dataset",
                                "type": "DatasetReference",
                                "parameters": {
                                    "container": {
                                        "value": "@pipeline().parameters.blobContainer",
                                        "type": "Expression"
                                    },
                                    "directory": {
                                        "value": "@concat(pipeline().parameters.curatedBlobDirectory,'/latest')",
                                        "type": "Expression"
                                    },
                                    "file": {
                                        "value": "@concat(pipeline().parameters.filename,'.jsonl')",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "json_dataset",
                                "type": "DatasetReference",
                                "parameters": {
                                    "container": {
                                        "value": "@pipeline().parameters.blobContainer",
                                        "type": "Expression"
                                    },
                                    "directory": {
                                        "value": "@concat(pipeline().parameters.curatedBlobDirectory,'/latest')",
                                        "type": "Expression"
                                    },
                                    "file": {
                                        "value": "@concat(pipeline().parameters.filename,'.json')",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "JSONL to JSON",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "CovidTracking_Dataflow",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "JsonSource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true
                                },
                                "formatSettings": {
                                    "type": "JsonReadSettings"
                                }
                            },
                            "sink": {
                                "type": "JsonSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "JsonWriteSettings"
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "json_dataset",
                                "type": "DatasetReference",
                                "parameters": {
                                    "container": {
                                        "value": "@pipeline().parameters.blobContainer",
                                        "type": "Expression"
                                    },
                                    "directory": {
                                        "value": "@concat(pipeline().parameters.curatedBlobDirectory,'/latest')",
                                        "type": "Expression"
                                    },
                                    "file": {
                                        "value": "@concat(pipeline().parameters.filename,'.jsonl')",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "json_dataset",
                                "type": "DatasetReference",
                                "parameters": {
                                    "container": {
                                        "value": "@pipeline().parameters.blobContainer",
                                        "type": "Expression"
                                    },
                                    "directory": {
                                        "value": "@concat(pipeline().parameters.curatedBlobDirectory,'/',formatdatetime(utcnow(),'yyyy/MM/dd'))",
                                        "type": "Expression"
                                    },
                                    "file": {
                                        "value": "@concat(pipeline().parameters.filename,'_',pipeline().RunId,'.json')",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "GetMetadataCurrentSchema",
                        "type": "GetMetadata",
                        "dependsOn": [
                            {
                                "activity": "To Raw Partition",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "To Raw Overwrite",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "source_csv_dataset",
                                "type": "DatasetReference",
                                "parameters": {
                                    "directory": {
                                        "value": "@concat(pipeline().parameters.rawBlobDirectory, '/latest')",
                                        "type": "Expression"
                                    },
                                    "file": {
                                        "value": "@pipeline().parameters.sourceFilename",
                                        "type": "Expression"
                                    },
                                    "container": {
                                        "value": "@pipeline().parameters.blobContainer",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "exists",
                                "itemName",
                                "size",
                                "columnCount",
                                "structure",
                                "lastModified"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobStorageReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "GetMetadataPrevSchema",
                        "type": "GetMetadata",
                        "dependsOn": [
                            {
                                "activity": "To Raw Partition",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "To Raw Overwrite",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "PreviousData",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "fieldList": [
                                "exists",
                                "itemName",
                                "size",
                                "columnCount",
                                "structure"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobStorageReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "IfCurrentSchemahasMoreColumns",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "GetMetadataCurrentSchema",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "GetMetadataPrevSchema",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@greater(activity('GetMetadataCurrentSchema').output.columnCount,activity('GetMetadataPrevSchema').output.columnCount)",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "WaitMoreColumnsFalse",
                                    "type": "Wait",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "waitTimeInSeconds": 2
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "WaitMoreColumnsTrue",
                                    "type": "Wait",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "waitTimeInSeconds": 2
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "IfCurrentSchemaHasLessColumns",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "GetMetadataCurrentSchema",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "GetMetadataPrevSchema",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@greater(activity('GetMetadataPrevSchema').output.columnCount,activity('GetMetadataCurrentSchema').output.columnCount)",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "WaitLessColumnsFalse",
                                    "type": "Wait",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "waitTimeInSeconds": 2
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "WaitLessColumnsTrue",
                                    "type": "Wait",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "waitTimeInSeconds": 2
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "IfCurrentSchemaHasSameColumnbutDifferentArrangement",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "GetMetadataCurrentSchema",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "GetMetadataPrevSchema",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@and(equals(activity('GetMetadataCurrentSchema').output.columnCount,activity('GetMetadataPrevSchema').output.columnCount),not(equals(activity('GetMetadataCurrentSchema').output.structure,activity('GetMetadataPrevSchema').output.structure)))",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "WaitDifferentArrangementFalse",
                                    "type": "Wait",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "waitTimeInSeconds": 2
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "WaitDifferentArrangementTrue",
                                    "type": "Wait",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "waitTimeInSeconds": 1
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "SavePrevSchemaCopy",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "IfCurrentSchemaHasSameColumnbutDifferentArrangement",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "IfCurrentSchemaHasLessColumns",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "IfCurrentSchemahasMoreColumns",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "PreviousData",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "get_previous_data_copy",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "SavePrevSchema",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "SavePrevSchemaCopy",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "source_csv_dataset",
                                "type": "DatasetReference",
                                "parameters": {
                                    "directory": {
                                        "value": "@concat(pipeline().parameters.rawBlobDirectory, '/latest')",
                                        "type": "Expression"
                                    },
                                    "file": {
                                        "value": "@pipeline().parameters.sourceFilename",
                                        "type": "Expression"
                                    },
                                    "container": {
                                        "value": "@pipeline().parameters.blobContainer",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "PreviousData",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "parameters": {
                    "sourceFilename": {
                        "type": "string",
                        "defaultValue": "states_daily_4pm_et.csv"
                    },
                    "sourceRelativeUrl": {
                        "type": "string"
                    },
                    "blobContainer": {
                        "type": "string",
                        "defaultValue": "public"
                    },
                    "rawBlobDirectory": {
                        "type": "string",
                        "defaultValue": "raw/covid-19/covid_tracking"
                    },
                    "curatedBlobDirectory": {
                        "type": "string",
                        "defaultValue": "curated/covid-19/covid_tracking"
                    },
                    "filename": {
                        "type": "string",
                        "defaultValue": "covid_tracking"
                    }
                },
                "folder": {
                    "name": "CovidDefinitiveHC/BlobStorageDataExtraction"
                },
                "annotations": [],
                "lastPublishTime": "2020-12-29T13:02:40Z"
            },
            "dependsOn": [
                "[parameters('factoryName')]",
                "[concat(variables('factoryId'), '/datasets/rest_source_dataset')]",
                "[concat(variables('factoryId'), '/datasets/source_csv_dataset')]",
                "[concat(variables('factoryId'), '/dataflows/Transformations_without_SQL_sink')]",
                "[concat(variables('factoryId'), '/datasets/json_dataset')]",
                "[concat(variables('factoryId'), '/datasets/PreviousData')]",
                "[concat(variables('factoryId'), '/datasets/get_previous_data_copy')]"
            ]
        },
        {
            "condition": "[equals(parameters('SinkDataToSql'),'Yes')]",
            "name": "[concat(parameters('factoryName'), '/Covid_Tracking_DefinitiveHC_With_Sql_Sink')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Covid Tracking (Cases/Deaths): https://covidtracking.com/api/v1/states/daily.json",
                "activities": [
                    {
                        "name": "To Raw Partition",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "RestSource",
                                "httpRequestTimeout": "00:01:40",
                                "requestInterval": "00.00:00:00.010",
                                "requestMethod": "GET"
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "path": "[['attributes']['OBJECTID']"
                                        },
                                        "sink": {
                                            "name": "OBJECTID",
                                            "type": "Int64"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['HOSPITAL_NAME']"
                                        },
                                        "sink": {
                                            "name": "HOSPITAL_NAME",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['HOSPITAL_TYPE']"
                                        },
                                        "sink": {
                                            "name": "HOSPITAL_TYPE",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['HQ_ADDRESS']"
                                        },
                                        "sink": {
                                            "name": "HQ_ADDRESS",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['HQ_ADDRESS1']"
                                        },
                                        "sink": {
                                            "name": "HQ_ADDRESS1",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['HQ_CITY']"
                                        },
                                        "sink": {
                                            "name": "HQ_CITY",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['HQ_STATE']"
                                        },
                                        "sink": {
                                            "name": "HQ_STATE",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['HQ_ZIP_CODE']"
                                        },
                                        "sink": {
                                            "name": "HQ_ZIP_CODE",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['COUNTY_NAME']"
                                        },
                                        "sink": {
                                            "name": "COUNTY_NAME",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['STATE_NAME']"
                                        },
                                        "sink": {
                                            "name": "STATE_NAME",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['STATE_FIPS']"
                                        },
                                        "sink": {
                                            "name": "STATE_FIPS",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['CNTY_FIPS']"
                                        },
                                        "sink": {
                                            "name": "CNTY_FIPS",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['FIPS']"
                                        },
                                        "sink": {
                                            "name": "FIPS",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['NUM_LICENSED_BEDS']"
                                        },
                                        "sink": {
                                            "name": "NUM_LICENSED_BEDS",
                                            "type": "Int64"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['NUM_STAFFED_BEDS']"
                                        },
                                        "sink": {
                                            "name": "NUM_STAFFED_BEDS",
                                            "type": "Int64"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['NUM_ICU_BEDS']"
                                        },
                                        "sink": {
                                            "name": "NUM_ICU_BEDS",
                                            "type": "Int64"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['ADULT_ICU_BEDS']"
                                        },
                                        "sink": {
                                            "name": "ADULT_ICU_BEDS",
                                            "type": "Int64"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['PEDI_ICU_BEDS']"
                                        },
                                        "sink": {
                                            "name": "PEDI_ICU_BEDS",
                                            "type": "Single"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['BED_UTILIZATION']"
                                        },
                                        "sink": {
                                            "name": "BED_UTILIZATION",
                                            "type": "Single"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['Potential_Increase_In_Bed_Capac']"
                                        },
                                        "sink": {
                                            "name": "Potential_Increase_In_Bed_Capac",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['AVG_VENTILATOR_USAGE']"
                                        },
                                        "sink": {
                                            "name": "AVG_VENTILATOR_USAGE",
                                            "type": "Single"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['geometry']['x']"
                                        },
                                        "sink": {
                                            "name": "x",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['geometry']['y']"
                                        },
                                        "sink": {
                                            "name": "y",
                                            "type": "Double"
                                        }
                                    }
                                ],
                                "collectionReference": "$['features']",
                                "mapComplexValuesToString": true
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "rest_source_dataset",
                                "type": "DatasetReference",
                                "parameters": {
                                    "relativeUrl": {
                                        "value": "@pipeline().parameters.sourceRelativeUrl",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "source_csv_dataset",
                                "type": "DatasetReference",
                                "parameters": {
                                    "directory": {
                                        "value": "@concat(pipeline().parameters.rawBlobDirectory,'/',formatDateTime(utcnow(),'yyyy/MM/dd'))",
                                        "type": "Expression"
                                    },
                                    "file": {
                                        "value": "@concat(pipeline().parameters.sourceFilename,'_',pipeline().RunId,'.csv')",
                                        "type": "Expression"
                                    },
                                    "container": {
                                        "value": "@pipeline().parameters.blobContainer",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "To Raw Overwrite",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "RestSource",
                                "httpRequestTimeout": "00:01:40",
                                "requestInterval": "00.00:00:00.010",
                                "requestMethod": "GET"
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "path": "[['attributes']['OBJECTID']"
                                        },
                                        "sink": {
                                            "name": "OBJECTID",
                                            "type": "Int64"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['HOSPITAL_NAME']"
                                        },
                                        "sink": {
                                            "name": "HOSPITAL_NAME",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['HOSPITAL_TYPE']"
                                        },
                                        "sink": {
                                            "name": "HOSPITAL_TYPE",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['HQ_ADDRESS']"
                                        },
                                        "sink": {
                                            "name": "HQ_ADDRESS",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['HQ_ADDRESS1']"
                                        },
                                        "sink": {
                                            "name": "HQ_ADDRESS1",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['HQ_CITY']"
                                        },
                                        "sink": {
                                            "name": "HQ_CITY",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['HQ_STATE']"
                                        },
                                        "sink": {
                                            "name": "HQ_STATE",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['HQ_ZIP_CODE']"
                                        },
                                        "sink": {
                                            "name": "HQ_ZIP_CODE",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['COUNTY_NAME']"
                                        },
                                        "sink": {
                                            "name": "COUNTY_NAME",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['STATE_NAME']"
                                        },
                                        "sink": {
                                            "name": "STATE_NAME",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['STATE_FIPS']"
                                        },
                                        "sink": {
                                            "name": "STATE_FIPS",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['CNTY_FIPS']"
                                        },
                                        "sink": {
                                            "name": "CNTY_FIPS",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['FIPS']"
                                        },
                                        "sink": {
                                            "name": "FIPS",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['NUM_LICENSED_BEDS']"
                                        },
                                        "sink": {
                                            "name": "NUM_LICENSED_BEDS",
                                            "type": "Int64"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['NUM_STAFFED_BEDS']"
                                        },
                                        "sink": {
                                            "name": "NUM_STAFFED_BEDS",
                                            "type": "Int64"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['NUM_ICU_BEDS']"
                                        },
                                        "sink": {
                                            "name": "NUM_ICU_BEDS",
                                            "type": "Int64"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['ADULT_ICU_BEDS']"
                                        },
                                        "sink": {
                                            "name": "ADULT_ICU_BEDS",
                                            "type": "Int64"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['PEDI_ICU_BEDS']"
                                        },
                                        "sink": {
                                            "name": "PEDI_ICU_BEDS",
                                            "type": "Single"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['BED_UTILIZATION']"
                                        },
                                        "sink": {
                                            "name": "BED_UTILIZATION",
                                            "type": "Single"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['Potential_Increase_In_Bed_Capac']"
                                        },
                                        "sink": {
                                            "name": "Potential_Increase_In_Bed_Capac",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['attributes']['AVG_VENTILATOR_USAGE']"
                                        },
                                        "sink": {
                                            "name": "AVG_VENTILATOR_USAGE",
                                            "type": "Single"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['geometry']['x']"
                                        },
                                        "sink": {
                                            "name": "x",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['geometry']['y']"
                                        },
                                        "sink": {
                                            "name": "y",
                                            "type": "Double"
                                        }
                                    }
                                ],
                                "collectionReference": "$['features']",
                                "mapComplexValuesToString": true
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "rest_source_dataset",
                                "type": "DatasetReference",
                                "parameters": {
                                    "relativeUrl": {
                                        "value": "@pipeline().parameters.sourceRelativeUrl",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "source_csv_dataset",
                                "type": "DatasetReference",
                                "parameters": {
                                    "directory": {
                                        "value": "@concat(pipeline().parameters.rawBlobDirectory, '/latest')",
                                        "type": "Expression"
                                    },
                                    "file": {
                                        "value": "@pipeline().parameters.sourceFilename",
                                        "type": "Expression"
                                    },
                                    "container": {
                                        "value": "@pipeline().parameters.blobContainer",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "JSONL to JSON LATEST",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "CovidTracking_Dataflow",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "JsonSource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true
                                },
                                "formatSettings": {
                                    "type": "JsonReadSettings"
                                }
                            },
                            "sink": {
                                "type": "JsonSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "JsonWriteSettings"
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "json_dataset",
                                "type": "DatasetReference",
                                "parameters": {
                                    "container": {
                                        "value": "@pipeline().parameters.blobContainer",
                                        "type": "Expression"
                                    },
                                    "directory": {
                                        "value": "@concat(pipeline().parameters.curatedBlobDirectory,'/latest')",
                                        "type": "Expression"
                                    },
                                    "file": {
                                        "value": "@concat(pipeline().parameters.filename,'.jsonl')",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "json_dataset",
                                "type": "DatasetReference",
                                "parameters": {
                                    "container": {
                                        "value": "@pipeline().parameters.blobContainer",
                                        "type": "Expression"
                                    },
                                    "directory": {
                                        "value": "@concat(pipeline().parameters.curatedBlobDirectory,'/latest')",
                                        "type": "Expression"
                                    },
                                    "file": {
                                        "value": "@concat(pipeline().parameters.filename,'.json')",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "JSONL to JSON",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "CovidTracking_Dataflow",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "JsonSource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true
                                },
                                "formatSettings": {
                                    "type": "JsonReadSettings"
                                }
                            },
                            "sink": {
                                "type": "JsonSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "JsonWriteSettings"
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "json_dataset",
                                "type": "DatasetReference",
                                "parameters": {
                                    "container": {
                                        "value": "@pipeline().parameters.blobContainer",
                                        "type": "Expression"
                                    },
                                    "directory": {
                                        "value": "@concat(pipeline().parameters.curatedBlobDirectory,'/latest')",
                                        "type": "Expression"
                                    },
                                    "file": {
                                        "value": "@concat(pipeline().parameters.filename,'.jsonl')",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "json_dataset",
                                "type": "DatasetReference",
                                "parameters": {
                                    "container": {
                                        "value": "@pipeline().parameters.blobContainer",
                                        "type": "Expression"
                                    },
                                    "directory": {
                                        "value": "@concat(pipeline().parameters.curatedBlobDirectory,'/',formatdatetime(utcnow(),'yyyy/MM/dd'))",
                                        "type": "Expression"
                                    },
                                    "file": {
                                        "value": "@concat(pipeline().parameters.filename,'_',pipeline().RunId,'.json')",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "GetMetadataCurrentSchema",
                        "type": "GetMetadata",
                        "dependsOn": [
                            {
                                "activity": "To Raw Partition",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "To Raw Overwrite",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "source_csv_dataset",
                                "type": "DatasetReference",
                                "parameters": {
                                    "directory": {
                                        "value": "@concat(pipeline().parameters.rawBlobDirectory, '/latest')",
                                        "type": "Expression"
                                    },
                                    "file": {
                                        "value": "@pipeline().parameters.sourceFilename",
                                        "type": "Expression"
                                    },
                                    "container": {
                                        "value": "@pipeline().parameters.blobContainer",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "itemName",
                                "columnCount",
                                "structure"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobStorageReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "GetMetadataPrevSchema",
                        "type": "GetMetadata",
                        "dependsOn": [
                            {
                                "activity": "To Raw Partition",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "To Raw Overwrite",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "PreviousData",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "fieldList": [
                                "itemName",
                                "columnCount",
                                "structure"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobStorageReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "IfCurrentSchemahasMoreColumns",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "GetMetadataCurrentSchema",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "GetMetadataPrevSchema",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@greater(activity('GetMetadataCurrentSchema').output.columnCount,activity('GetMetadataPrevSchema').output.columnCount)",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "WaitMoreColumnsFalse",
                                    "type": "Wait",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "waitTimeInSeconds": 2
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "WaitMoreColumnsTrue",
                                    "type": "Wait",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "waitTimeInSeconds": 2
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "IfCurrentSchemaHasLessColumns",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "GetMetadataCurrentSchema",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "GetMetadataPrevSchema",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@greater(activity('GetMetadataPrevSchema').output.columnCount,activity('GetMetadataCurrentSchema').output.columnCount)",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "WaitLessColumnsFalse",
                                    "type": "Wait",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "waitTimeInSeconds": 2
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "WaitLessColumnsTrue",
                                    "type": "Wait",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "waitTimeInSeconds": 2
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "IfCurrentSchemaHasSameColumnbutDifferentArrangement",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "GetMetadataCurrentSchema",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "GetMetadataPrevSchema",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@and(equals(activity('GetMetadataCurrentSchema').output.columnCount,activity('GetMetadataPrevSchema').output.columnCount),not(equals(activity('GetMetadataCurrentSchema').output.structure,activity('GetMetadataPrevSchema').output.structure)))",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "WaitDifferentArrangementFalse",
                                    "type": "Wait",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "waitTimeInSeconds": 2
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "WaitDifferentArrangementTrue",
                                    "type": "Wait",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "waitTimeInSeconds": 1
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "SavePrevSchemaCopy",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "IfCurrentSchemaHasSameColumnbutDifferentArrangement",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "IfCurrentSchemaHasLessColumns",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "IfCurrentSchemahasMoreColumns",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "PreviousData",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "get_previous_data_copy",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "SavePrevSchema",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "SavePrevSchemaCopy",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "source_csv_dataset",
                                "type": "DatasetReference",
                                "parameters": {
                                    "directory": {
                                        "value": "@concat(pipeline().parameters.rawBlobDirectory, '/latest')",
                                        "type": "Expression"
                                    },
                                    "file": {
                                        "value": "@pipeline().parameters.sourceFilename",
                                        "type": "Expression"
                                    },
                                    "container": {
                                        "value": "@pipeline().parameters.blobContainer",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "PreviousData",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "CovidTracking_Dataflow",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [
                            {
                                "activity": "Create Schme if not exists",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "Transformations_with_SQL_sink",
                                "type": "DataFlowReference",
                                "parameters": {
                                    "filename": {
                                        "value": "'@{pipeline().parameters.filename}'",
                                        "type": "Expression"
                                    },
                                    "runid": {
                                        "value": "'@{pipeline().RunId}'",
                                        "type": "Expression"
                                    }
                                },
                                "datasetParameters": {
                                    "SourceCSV": {
                                        "directory": {
                                            "value": "@concat(pipeline().parameters.rawBlobDirectory, '/latest')",
                                            "type": "Expression"
                                        },
                                        "file": {
                                            "value": "@pipeline().parameters.sourceFilename",
                                            "type": "Expression"
                                        },
                                        "container": {
                                            "value": "@pipeline().parameters.blobContainer",
                                            "type": "Expression"
                                        }
                                    },
                                    "SinkParquet": {
                                        "container": {
                                            "value": "@pipeline().parameters.blobContainer",
                                            "type": "Expression"
                                        },
                                        "directory": {
                                            "value": "@concat(pipeline().parameters.curatedBlobDirectory,'/',formatdatetime(utcnow(),'yyyy/MM/dd'))",
                                            "type": "Expression"
                                        },
                                        "file": "specified in the data flow"
                                    },
                                    "SinkLatestParquet": {
                                        "container": {
                                            "value": "@pipeline().parameters.blobContainer",
                                            "type": "Expression"
                                        },
                                        "directory": {
                                            "value": "@concat(pipeline().parameters.curatedBlobDirectory,'/latest')",
                                            "type": "Expression"
                                        },
                                        "file": "specified in the data flow"
                                    },
                                    "sinkJsonl": {
                                        "container": {
                                            "value": "@pipeline().parameters.blobContainer",
                                            "type": "Expression"
                                        },
                                        "directory": {
                                            "value": "@concat(pipeline().parameters.curatedBlobDirectory,'/',formatdatetime(utcnow(),'yyyy/MM/dd'))",
                                            "type": "Expression"
                                        },
                                        "file": "specified in data flow"
                                    },
                                    "sinkCSV": {
                                        "directory": {
                                            "value": "@concat(pipeline().parameters.curatedBlobDirectory,'/',formatdatetime(utcnow(),'yyyy/MM/dd'))",
                                            "type": "Expression"
                                        },
                                        "file": "specified in data flow",
                                        "container": {
                                            "value": "@pipeline().parameters.blobContainer",
                                            "type": "Expression"
                                        }
                                    },
                                    "sinkLatestCSV": {
                                        "directory": {
                                            "value": "@concat(pipeline().parameters.curatedBlobDirectory,'/latest')",
                                            "type": "Expression"
                                        },
                                        "file": {
                                            "value": "@concat(pipeline().parameters.filename,'.csv')",
                                            "type": "Expression"
                                        },
                                        "container": {
                                            "value": "@pipeline().parameters.blobContainer",
                                            "type": "Expression"
                                        }
                                    },
                                    "sinkLatestJsonl": {
                                        "container": {
                                            "value": "@pipeline().parameters.blobContainer",
                                            "type": "Expression"
                                        },
                                        "directory": {
                                            "value": "@concat(pipeline().parameters.curatedBlobDirectory,'/latest')",
                                            "type": "Expression"
                                        },
                                        "file": {
                                            "value": "@concat(pipeline().parameters.filename,'.jsonl')",
                                            "type": "Expression"
                                        }
                                    },
                                    "sinkDatabase": {
                                        "tablename": {
                                            "value": "@pipeline().parameters.tablename",
                                            "type": "Expression"
                                        },
                                        "schemaName": "db_asad"
                                    }
                                }
                            },
                            "staging": {},
                            "compute": {
                                "coreCount": 8,
                                "computeType": "General"
                            },
                            "traceLevel": "Fine"
                        }
                    },
                    {
                        "name": "PreviousTable",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "PreviousTableSave",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": {
                                    "value": "IF OBJECT_ID('db_asad.previousTable', 'u') IS NOT NULL \n  DROP TABLE db_asad.previousTable\n",
                                    "type": "Expression"
                                },
                                "tableOption": "autoCreate",
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "sql_sink_dataset",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": "covidDataset",
                                    "schemaName": "db_asad"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "PreviousTable",
                                "type": "DatasetReference",
                                "parameters": {
                                    "PreviousTableName": "previousTable",
                                    "schemaName": "db_asad"
                                }
                            }
                        ]
                    },
                    {
                        "name": "PreviousTableSave",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "IfDataTypeChangedAlert",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": {
                                    "value": "IF OBJECT_ID('db_asad.previousTableSaveCopy', 'u') IS NOT NULL \n  DROP TABLE db_asad.previousTableSaveCopy\n",
                                    "type": "Expression"
                                },
                                "tableOption": "autoCreate",
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "PreviousTable",
                                "type": "DatasetReference",
                                "parameters": {
                                    "PreviousTableName": "previousTable",
                                    "schemaName": "db_asad"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "PreviousTableSave",
                                "type": "DatasetReference",
                                "parameters": {
                                    "previousTableSaveName": "previousTableSaveCopy",
                                    "schemaName": "db_asad"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Sql Data Type change detection",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "CreateStoreProcedureIfNotExists",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[db_asad].[DataTypeChangedProc]"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureSqlDatabaseLinkedService",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Get Changed Data Type Columns",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Sql Data Type change detection",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "select * from db_asad.storeProcTable",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "save_store_proc_result_table",
                                "type": "DatasetReference",
                                "parameters": {
                                    "storeProcTable": "storeProcTable",
                                    "schemaName": "db_asad"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "IfDataTypeChangedAlert",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Get Changed Data Type Columns",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@greater(activity('Get Changed Data Type Columns').output.count,0)",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "WaitFalseNotChangedDataType",
                                    "type": "Wait",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "waitTimeInSeconds": 1
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "WaitTrueChangedDataType",
                                    "type": "Wait",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "waitTimeInSeconds": 1
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "CreateStoreProcedureIfNotExists",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "CovidTracking_Dataflow",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'db_asad')\nBEGIN\nEXEC('CREATE SCHEMA db_asad')\nEND\nIF NOT EXISTS (\n    select * \n    from sys.objects \n    WHERE object_id = OBJECT_ID(N'[db_asad].[DataTypeChangedProc]')\n    )\nBEGIN\n    EXEC('CREATE PROCEDURE db_asad.DataTypeChangedProc AS IF OBJECT_ID(''db_asad.storeProcTable'', ''u'') IS NOT NULL DROP TABLE db_asad.storeProcTable; CREATE TABLE db_asad.storeProcTable( table1_name varchar(255), Column1_name varchar(255), DATA_TYPE1 varchar(255), table2_name varchar(255), Column2_name varchar(255), DATA_TYPE2 varchar(255) ); INSERT INTO db_asad.storeProcTable SELECT c1.table_name, c1.COLUMN_NAME, c1.DATA_TYPE, c2.table_name, c2.COLUMN_NAME, c2.DATA_TYPE FROM [INFORMATION_SCHEMA].[COLUMNS] c1 INNER JOIN [INFORMATION_SCHEMA].[COLUMNS] c2 ON (c1.COLUMN_NAME = c2.COLUMN_NAME AND c1.data_type <> c2.DATA_TYPE) WHERE c1.table_name=''covidDataset'' AND c2.table_name = ''previousTable'';')\n    select Count(*) from sys.symmetric_keys;\nEND\n\nELSE\n\nBEGIN\n    select Count(*) from sys.symmetric_keys;\nEND",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "save_store_proc_result_table",
                                "type": "DatasetReference",
                                "parameters": {
                                    "storeProcTable": "storeProcTable",
                                    "schemaName": "db_asad"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Create Schme if not exists",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "IfCurrentSchemaHasSameColumnbutDifferentArrangement",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "IfCurrentSchemaHasLessColumns",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "IfCurrentSchemahasMoreColumns",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'db_asad')\nBEGIN\nEXEC('CREATE SCHEMA db_asad')\nselect Count(*) from sys.symmetric_keys;\nEND\nELSE\nBEGIN\n    select Count(*) from sys.symmetric_keys;\nEND",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "save_store_proc_result_table",
                                "type": "DatasetReference",
                                "parameters": {
                                    "storeProcTable": "storeProcTable",
                                    "schemaName": "db_asad"
                                }
                            },
                            "firstRowOnly": false
                        }
                    }
                ],
                "parameters": {
                    "sourceFilename": {
                        "type": "string",
                        "defaultValue": "states_daily_4pm_et.csv"
                    },
                    "sourceRelativeUrl": {
                        "type": "string"
                    },
                    "blobContainer": {
                        "type": "string",
                        "defaultValue": "public"
                    },
                    "rawBlobDirectory": {
                        "type": "string",
                        "defaultValue": "raw/covid-19/covid_tracking"
                    },
                    "curatedBlobDirectory": {
                        "type": "string",
                        "defaultValue": "curated/covid-19/covid_tracking"
                    },
                    "filename": {
                        "type": "string",
                        "defaultValue": "covid_tracking"
                    },
                    "tablename": {
                        "type": "string",
                        "defaultValue": "covidDataset"
                    }
                },
                "variables": {
                    "colnamePrev": {
                        "type": "Array"
                    },
                    "dataTypePrev": {
                        "type": "Array"
                    },
                    "CurrentCol": {
                        "type": "Array"
                    },
                    "CurrentDataType": {
                        "type": "Array"
                    },
                    "colnamePrev_Copy": {
                        "type": "Array"
                    },
                    "dataTypePrev_Copy": {
                        "type": "Array"
                    },
                    "CurrentCol_Copy": {
                        "type": "Array"
                    },
                    "CurrentDataType_Copy": {
                        "type": "Array"
                    },
                    "currentStructure": {
                        "type": "Array"
                    },
                    "prevStructure": {
                        "type": "Array"
                    }
                },
                "folder": {
                    "name": "CovidDefinitiveHC/BlobStorageAndSqlDataExtraction"
                },
                "annotations": [],
                "lastPublishTime": "2020-12-29T14:05:29Z"
            },
            "dependsOn": [
                "[parameters('factoryName')]",
                "[concat(variables('factoryId'), '/datasets/rest_source_dataset')]",
                "[concat(variables('factoryId'), '/datasets/source_csv_dataset')]",
                "[concat(variables('factoryId'), '/datasets/json_dataset')]",
                "[concat(variables('factoryId'), '/datasets/PreviousData')]",
                "[concat(variables('factoryId'), '/datasets/get_previous_data_copy')]",
                "[concat(variables('factoryId'), '/dataflows/Transformations_with_SQL_sink')]",
                "[concat(variables('factoryId'), '/datasets/sql_sink_dataset')]",
                "[concat(variables('factoryId'), '/datasets/PreviousTable')]",
                "[concat(variables('factoryId'), '/datasets/PreviousTableSave')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseLinkedService')]",
                "[concat(variables('factoryId'), '/datasets/save_store_proc_result_table')]"
            ]
        },

         {
            "condition": "[equals(parameters('SinkDataToSql'),'No')]",
            "name": "[concat(parameters('factoryName'), '/DailyTrigger')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Daily trigger for the pipeline",
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "Covid_Tracking_DefinitiveHC_Without_Sql_Sink",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "sourceFilename": "states_daily_4pm_et.csv",
                            "sourceRelativeUrl": " ",
                            "blobContainer": "public",
                            "rawBlobDirectory": "raw/covid-19/covid_tracking",
                            "curatedBlobDirectory": "curated/covid-19/covid_tracking",
                            "filename": "covid_tracking"
                        }
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Hour",
                        "interval": 24,
                        "startTime": "[parameters('currentTime')]",
                        "timeZone": "UTC"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/Covid_Tracking_DefinitiveHC_Without_Sql_Sink')]"
            ]
        },

        {
            "condition": "[equals(parameters('SinkDataToSql'),'Yes')]",
            "name": "[concat(parameters('factoryName'), '/DailyTriggerForSqlPipeline')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Daily trigger for the pipeline",
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "Covid_Tracking_DefinitiveHC_With_Sql_Sink",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "sourceFilename": "states_daily_4pm_et.csv",
                            "sourceRelativeUrl": " ",
                            "blobContainer": "public",
                            "rawBlobDirectory": "raw/covid-19/covid_tracking",
                            "curatedBlobDirectory": "curated/covid-19/covid_tracking",
                            "filename": "covid_tracking"
                        }
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Hour",
                        "interval": 24,
                        "startTime": "[parameters('currentTime')]",
                        "timeZone": "UTC"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/Covid_Tracking_DefinitiveHC_With_Sql_Sink')]"
            ]
        },

    {
            "name": "[concat(parameters('factoryName'), '/RestApiLinkedService')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "RestService",
                "typeProperties": {
                    "url": "https://services7.arcgis.com/LXCny1HyhQCUSueu/arcgis/rest/services/Definitive_Healthcare_USA_Hospital_Beds/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json",
                    "enableServerCertificateValidation": true,
                    "authenticationType": "Anonymous"
                }
            },
            "dependsOn": [
                "[parameters('factoryName')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureBlobStorageLinkedService')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobStorage",
                "typeProperties": {
                    "connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageAccountName'),';AccountKey=',listKeys(variables('storageAccountId'), '2019-06-01').keys[0].value)]"
    
                }
            },
            "dependsOn": [
                "[parameters('factoryName')]"
            ]
        },

        {
            "condition": "[equals(parameters('SinkDataToSql'),'Yes')]",
            "name": "[concat(parameters('factoryName'), '/AzureSqlDatabaseLinkedService')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureSqlDatabase",
                "typeProperties": {
                    "connectionString": "[concat('Server=tcp:',parameters('sqlServerName'), variables('fullyQualifiedDomainName'), ',1433;Initial Catalog=', parameters('databaseName'), ';User Id=', parameters('administratorLogin'), '@', parameters('sqlServerName'), ';Password=', parameters('administratorLoginPassword'), ';Trusted_Connection=False;Encrypt=True;Connection Timeout=30;MultipleActiveResultSets=True')]"
                }
            },
            "dependsOn": [
                "[parameters('factoryName')]"
            ]
        },

        {
            "type": "Microsoft.Insights/metricalerts",
            "apiVersion": "2018-03-01",
            "name": "AlertOnCancellation",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/actionGroups', parameters('actionGroupsName'))]"
            ],
            "properties": {
                "description": "This will notify when pipeline is cancelled",
                "severity": 0,
                "enabled": true,
                "scopes": [
                    "[variables('factoryId')]"
                ],
                "evaluationFrequency": "PT1M",
                "windowSize": "PT1M",
                "criteria": {
                    "allOf": [
                        {
                            "threshold": 1,
                            "name": "PipelineCancelledRuns",
                            "metricNamespace": "Microsoft.DataFactory/factories",
                            "metricName": "PipelineCancelledRuns",
                            "dimensions": [
                                {
                                    "name": "Name",
                                    "operator": "Include",
                                    "values": [
                                        "Covid_Tracking_DefinitiveHC_Without_Sql_Sink",
                                        "Covid_Tracking_DefinitiveHC_With_Sql_Sink"
                                    ]
                                },
                                {
                                    "name": "FailureType",
                                    "operator": "Include",
                                    "values": [
                                        "UserError",
                                        "SystemError",
                                        "BadGateway"
                                    ]
                                }
                            ],
                            "operator": "GreaterThanOrEqual",
                            "timeAggregation": "Total",
                            "criterionType": "StaticThresholdCriterion"
                        }
                    ],
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "targetResourceType": "microsoft.datafactory/factories",
                "actions": [
                    {
                        "actionGroupId": "[resourceId('microsoft.insights/actionGroups', parameters('actionGroupsName'))]",
                        "webHookProperties": {}
                    }
                ]
            }
        },

        {
            "type": "Microsoft.Insights/metricalerts",
            "apiVersion": "2018-03-01",
            "name": "AlertOnCancellationActivity",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/actionGroups', parameters('actionGroupsName'))]"
            ],
            "properties": {
                "description": "This alert will be shown when whole pipeline is cancelled",
                "severity": 0,
                "enabled": true,
                "scopes": [
                    "[variables('factoryId')]"
                ],
                "evaluationFrequency": "PT1M",
                "windowSize": "PT1M",
                "criteria": {
                    "allOf": [
                        {
                            "threshold": 1,
                            "name": "9a14c1ae-293c-4ad3-bd35-40ba49cca90b",
                            "metricNamespace": "Microsoft.DataFactory/factories",
                            "metricName": "ActivityCancelledRuns",
                            "dimensions": [
                                {
                                    "name": "ActivityType",
                                    "operator": "Include",
                                    "values": [
                                        "Copy",
                                        "ExecuteDataFlow"
                                    ]
                                },
                                {
                                    "name": "Name",
                                    "operator": "Include",
                                    "values": [
                                        "To Raw Partition",
                                        "To Raw Overwrite",
                                        "CovidTracking_Dataflow",
                                        "JSONL to JSON LATEST",
                                        "JSONL to JSON"
                                    ]
                                },
                                {
                                    "name": "PipelineName",
                                    "operator": "Include",
                                    "values": [
                                        "Covid_Tracking_DefinitiveHC_Without_Sql_Sink",
                                        "Covid_Tracking_DefinitiveHC_With_Sql_Sink"
                                    ]
                                },
                                {
                                    "name": "FailureType",
                                    "operator": "Include",
                                    "values": [
                                        "UserError",
                                        "SystemError",
                                        "BadGateway"
                                    ]
                                }
                            ],
                            "operator": "GreaterThanOrEqual",
                            "timeAggregation": "Average",
                            "criterionType": "StaticThresholdCriterion"
                        }
                    ],
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "targetResourceType": "microsoft.datafactory/factories",
                "actions": [
                    {
                        "actionGroupId": "[resourceId('microsoft.insights/actionGroups', parameters('actionGroupsName'))]",
                        "webHookProperties": {}
                    }
                ]
            }
        },

         {
            "type": "Microsoft.Insights/metricalerts",
            "apiVersion": "2018-03-01",
            "name": "AlertOnFailure",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/actionGroups', parameters('actionGroupsName'))]"
            ],
            "properties": {
                "description": "This alert will notify via email when pipeline is failed",
                "severity": 0,
                "enabled": true,
                "scopes": [
                    "[variables('factoryId')]"
                ],
                "evaluationFrequency": "PT1M",
                "windowSize": "PT1M",
                "criteria": {
                    "allOf": [
                        {
                            "threshold": 1,
                            "name": "PipelineFailedRuns",
                            "metricNamespace": "Microsoft.DataFactory/factories",
                            "metricName": "PipelineFailedRuns",
                            "dimensions": [
                                {
                                    "name": "Name",
                                    "operator": "Include",
                                    "values": [
                                        "Covid_Tracking_DefinitiveHC_Without_Sql_Sink",
                                        "Covid_Tracking_DefinitiveHC_With_Sql_Sink"
                                    ]
                                },
                                {
                                    "name": "FailureType",
                                    "operator": "Include",
                                    "values": [
                                        "UserError",
                                        "SystemError",
                                        "BadGateway"
                                    ]
                                }
                            ],
                            "operator": "GreaterThanOrEqual",
                            "timeAggregation": "Average",
                            "criterionType": "StaticThresholdCriterion"
                        }
                    ],
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "targetResourceType": "microsoft.datafactory/factories",
                "actions": [
                    {
                        "actionGroupId": "[resourceId('microsoft.insights/actionGroups', parameters('actionGroupsName'))]",
                        "webHookProperties": {}
                    }
                ]
            }
        },

         {
            "type": "Microsoft.Insights/metricalerts",
            "apiVersion": "2018-03-01",
            "name": "AlertOnFailureActivity",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/actionGroups', parameters('actionGroupsName'))]"
            ],
            "properties": {
                "description": "This will notify when any activity is failed",
                "severity": 0,
                "enabled": true,
                "scopes": [
                    "[variables('factoryId')]"
                ],
                "evaluationFrequency": "PT1M",
                "windowSize": "PT1M",
                "criteria": {
                    "allOf": [
                        {
                            "threshold": 1,
                            "name": "ActivityFailedRuns",
                            "metricNamespace": "Microsoft.DataFactory/factories",
                            "metricName": "ActivityFailedRuns",
                            "dimensions": [
                                {
                                    "name": "Name",
                                    "operator": "Include",
                                    "values": [
                                        "To Raw Partition",
                                        "To Raw Overwrite",
                                        "CovidTracking_Dataflow",
                                        "JSONL to JSON LATEST",
                                        "JSONL to JSON"
                                    ]
                                },
                                {
                                    "name": "PipelineName",
                                    "operator": "Include",
                                    "values": [
                                        "Covid_Tracking_DefinitiveHC_Without_Sql_Sink",
                                        "Covid_Tracking_DefinitiveHC_With_Sql_Sink"
                                    ]
                                },
                                {
                                    "name": "FailureType",
                                    "operator": "Include",
                                    "values": [
                                        "UserError",
                                        "SystemError",
                                        "BadGateway"
                                    ]
                                },
                                {
                                    "name": "ActivityType",
                                    "operator": "Include",
                                    "values": [
                                        "Copy",
                                        "ExecuteDataFlow"
                                    ]
                                }
                            ],
                            "operator": "GreaterThanOrEqual",
                            "timeAggregation": "Average",
                            "criterionType": "StaticThresholdCriterion"
                        }
                    ],
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "targetResourceType": "microsoft.datafactory/factories",
                "actions": [
                    {
                        "actionGroupId": "[resourceId('microsoft.insights/actionGroups', parameters('actionGroupsName'))]",
                        "webHookProperties": {}
                    }
                ]
            }
        },

        {
            "type": "Microsoft.Insights/metricalerts",
            "apiVersion": "2018-03-01",
            "name": "AlertOnSuccess",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/actionGroups', parameters('actionGroupsName'))]"
            ],
            "properties": {
                "description": "This will notify alert once pipeline is succeeded",
                "severity": 0,
                "enabled": true,
                "scopes": [
                    "[variables('factoryId')]"
                ],
                "evaluationFrequency": "PT1M",
                "windowSize": "PT1M",
                "criteria": {
                    "allOf": [
                        {
                            "threshold": 1,
                            "name": "PipelineSucceededRuns",
                            "metricNamespace": "Microsoft.DataFactory/factories",
                            "metricName": "PipelineSucceededRuns",
                            "dimensions": [
                                {
                                    "name": "Name",
                                    "operator": "Include",
                                    "values": [
                                        "Covid_Tracking_DefinitiveHC_Without_Sql_Sink",
                                        "Covid_Tracking_DefinitiveHC_With_Sql_Sink"
                                    ]
                                }
                            ],
                            "operator": "GreaterThanOrEqual",
                            "timeAggregation": "Average",
                            "criterionType": "StaticThresholdCriterion"
                        }
                    ],
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "targetResourceType": "microsoft.datafactory/factories",
                "actions": [
                    {
                        "actionGroupId": "[resourceId('microsoft.insights/actionGroups', parameters('actionGroupsName'))]",
                        "webHookProperties": {}
                    }
                ]
            }
        },

        {
            "type": "Microsoft.Insights/metricalerts",
            "apiVersion": "2018-03-01",
            "name": "AlertOnCancelTrigger",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/actionGroups', parameters('actionGroupsName'))]"
            ],
            "properties": {
                "description": "This alert will send notification when pipeline is cancelled by trigger",
                "severity": 0,
                "enabled": true,
                "scopes": [
                    "[variables('factoryId')]"
                ],
                "evaluationFrequency": "PT1M",
                "windowSize": "PT1M",
                "criteria": {
                    "allOf": [
                        {
                            "threshold": 1,
                            "name": "Metric1",
                            "metricNamespace": "Microsoft.DataFactory/factories",
                            "metricName": "TriggerCancelledRuns",
                            "dimensions": [
                                {
                                    "name": "Name",
                                    "operator": "Include",
                                    "values": [
                                        "Covid_Tracking_DefinitiveHC_Without_Sql_Sink",
                                        "Covid_Tracking_DefinitiveHC_With_Sql_Sink"
                                    ]
                                },
                                {
                                    "name": "FailureType",
                                    "operator": "Include",
                                    "values": [
                                        "UserError",
                                        "SystemError",
                                        "BadGateway"
                                    ]
                                }
                            ],
                            "operator": "GreaterThanOrEqual",
                            "timeAggregation": "Average",
                            "criterionType": "StaticThresholdCriterion"
                        }
                    ],
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "autoMitigate": true,
                "targetResourceType": "Microsoft.DataFactory/factories",
                "actions": [
                    {
                        "actionGroupId": "[resourceId('microsoft.insights/actionGroups', parameters('actionGroupsName'))]",
                        "webHookProperties": {}
                    }
                ]
            }
        },
        
        {
            "type": "Microsoft.Insights/metricalerts",
            "apiVersion": "2018-03-01",
            "name": "AlertOnFailedTrigger",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/actionGroups', parameters('actionGroupsName'))]"
            ],
            "properties": {
                "description": "This alert will send notification when trigger is failed",
                "severity": 0,
                "enabled": true,
                "scopes": [
                    "[variables('factoryId')]"
                ],
                "evaluationFrequency": "PT1M",
                "windowSize": "PT1M",
                "criteria": {
                    "allOf": [
                        {
                            "threshold": 1,
                            "name": "Metric1",
                            "metricNamespace": "Microsoft.DataFactory/factories",
                            "metricName": "TriggerFailedRuns",
                            "dimensions": [
                                {
                                    "name": "Name",
                                    "operator": "Include",
                                    "values": [
                                        "Covid_Tracking_DefinitiveHC_Without_Sql_Sink",
                                        "Covid_Tracking_DefinitiveHC_With_Sql_Sink"
                                    ]
                                },
                                {
                                    "name": "FailureType",
                                    "operator": "Include",
                                    "values": [
                                        "UserError",
                                        "SystemError",
                                        "BadGateway"
                                    ]
                                }
                            ],
                            "operator": "GreaterThanOrEqual",
                            "timeAggregation": "Average",
                            "criterionType": "StaticThresholdCriterion"
                        }
                    ],
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "autoMitigate": true,
                "targetResourceType": "Microsoft.DataFactory/factories",
                "actions": [
                    {
                        "actionGroupId": "[resourceId('microsoft.insights/actionGroups', parameters('actionGroupsName'))]",
                        "webHookProperties": {}
                    }
                ]
            }
        },

        {
            "type": "Microsoft.Insights/metricalerts",
            "apiVersion": "2018-03-01",
            "name": "AlertOnLessCurrentSchemaColumns",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/actionGroups', parameters('actionGroupsName'))]"
            ],
            "properties": {
                "description": "It is to notify that the current schema of the source has less column(s) than the schema of the same source previously detected",
                "severity": 0,
                "enabled": true,
                "scopes": [
                     "[variables('factoryId')]"
                ],
                "evaluationFrequency": "PT1M",
                "windowSize": "PT1M",
                "criteria": {
                    "allOf": [
                        {
                            "threshold": 1,
                            "name": "72958132-97c9-4a05-aa19-bafcdcb2f527",
                            "metricNamespace": "Microsoft.DataFactory/factories",
                            "metricName": "ActivitySucceededRuns",
                            "dimensions": [
                                {
                                    "name": "ActivityType",
                                    "operator": "Include",
                                    "values": [
                                        "Wait"
                                    ]
                                },
                                {
                                    "name": "Name",
                                    "operator": "Include",
                                    "values": [
                                        "WaitLessColumnsTrue"
                                    ]
                                },
                                {
                                    "name": "PipelineName",
                                    "operator": "Include",
                                    "values": [
                                        "Covid_Tracking_DefinitiveHC_Without_Sql_Sink",
                                        "Covid_Tracking_DefinitiveHC_With_Sql_Sink"
                                    ]
                                },
                                {
                                    "name": "FailureType",
                                    "operator": "Include",
                                    "values": [
                                        "none"
                                    ]
                                }
                            ],
                            "operator": "GreaterThanOrEqual",
                            "timeAggregation": "Average",
                            "criterionType": "StaticThresholdCriterion"
                        }
                    ],
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "targetResourceType": "microsoft.datafactory/factories",
                "actions": [
                    {
                        "actionGroupId": "[resourceId('microsoft.insights/actionGroups', parameters('actionGroupsName'))]",
                        "webHookProperties": {}
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Insights/metricalerts",
            "apiVersion": "2018-03-01",
            "name": "AlertOnMoreCurrentSchemaColumns",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/actionGroups', parameters('actionGroupsName'))]"
            ],
            "properties": {
                "description": "It is to notify that the current schema of the source has more column(s) than the schema of same source previously detected",
                "severity": 0,
                "enabled": true,
                "scopes": [
                    "[variables('factoryId')]"
                ],
                "evaluationFrequency": "PT1M",
                "windowSize": "PT1M",
                "criteria": {
                    "allOf": [
                        {
                            "threshold": 1,
                            "name": "ActivitySucceededRuns",
                            "metricNamespace": "Microsoft.DataFactory/factories",
                            "metricName": "ActivitySucceededRuns",
                            "dimensions": [
                                {
                                    "name": "ActivityType",
                                    "operator": "Include",
                                    "values": [
                                        "Wait"
                                    ]
                                },
                                {
                                    "name": "Name",
                                    "operator": "Include",
                                    "values": [
                                        "WaitMoreColumnsTrue"
                                    ]
                                },
                                {
                                    "name": "PipelineName",
                                    "operator": "Include",
                                    "values": [
                                        "Covid_Tracking_DefinitiveHC_Without_Sql_Sink",
                                        "Covid_Tracking_DefinitiveHC_With_Sql_Sink"
                                    ]
                                },
                                {
                                    "name": "FailureType",
                                    "operator": "Include",
                                    "values": [
                                        "none"
                                    ]
                                }
                            ],
                            "operator": "GreaterThanOrEqual",
                            "timeAggregation": "Average",
                            "criterionType": "StaticThresholdCriterion"
                        }
                    ],
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "targetResourceType": "microsoft.datafactory/factories",
                "actions": [
                    {
                        "actionGroupId": "[resourceId('microsoft.insights/actionGroups', parameters('actionGroupsName'))]",
                        "webHookProperties": {}
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Insights/metricalerts",
            "apiVersion": "2018-03-01",
            "name": "AlertOnSameColumnsButDiffArrangement",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/actionGroups', parameters('actionGroupsName'))]"
            ],
            "properties": {
                "description": "It is to notify that the current schema of the source has same number of columns as the schema of the same source previously detected but either the arrangement of columns is different or one or more columns have different names",
                "severity": 0,
                "enabled": true,
                "scopes": [
                     "[variables('factoryId')]"
                ],
                "evaluationFrequency": "PT1M",
                "windowSize": "PT1M",
                "criteria": {
                    "allOf": [
                        {
                            "threshold": 1,
                            "name": "f7daf781-9cd3-41d4-9b33-eee804c3020a",
                            "metricNamespace": "Microsoft.DataFactory/factories",
                            "metricName": "ActivitySucceededRuns",
                            "dimensions": [
                                {
                                    "name": "ActivityType",
                                    "operator": "Include",
                                    "values": [
                                        "Wait"
                                    ]
                                },
                                {
                                    "name": "Name",
                                    "operator": "Include",
                                    "values": [
                                        "WaitDifferentArrangementTrue"
                                    ]
                                },
                                {
                                    "name": "PipelineName",
                                    "operator": "Include",
                                    "values": [
                                        "Covid_Tracking_DefinitiveHC_Without_Sql_Sink",
                                        "Covid_Tracking_DefinitiveHC_With_Sql_Sink"
                                    ]
                                },
                                {
                                    "name": "FailureType",
                                    "operator": "Include",
                                    "values": [
                                        "none"
                                    ]
                                }
                            ],
                            "operator": "GreaterThanOrEqual",
                            "timeAggregation": "Average",
                            "criterionType": "StaticThresholdCriterion"
                        }
                    ],
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "targetResourceType": "microsoft.datafactory/factories",
                "actions": [
                    {
                        "actionGroupId": "[resourceId('microsoft.insights/actionGroups', parameters('actionGroupsName'))]",
                        "webHookProperties": {}
                    }
                ]
            }
        },
        
        {
            "type": "Microsoft.Insights/metricalerts",
            "apiVersion": "2018-03-01",
            "name": "AlertOnChangedDataType",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/actionGroups', parameters('actionGroupsName'))]"
            ],
            "properties": {
                "description": "Change in data type of one or more column(s) has be detected",
                "severity": 0,
                "enabled": true,
                "scopes": [
                    "[variables('factoryId')]"
                ],
                "evaluationFrequency": "PT1M",
                "windowSize": "PT1M",
                "criteria": {
                    "allOf": [
                        {
                            "threshold": 1,
                            "name": "ActivitySucceededRuns",
                            "metricNamespace": "Microsoft.DataFactory/factories",
                            "metricName": "ActivitySucceededRuns",
                            "dimensions": [
                                {
                                    "name": "ActivityType",
                                    "operator": "Include",
                                    "values": [
                                        "Wait"
                                    ]
                                },
                                {
                                    "name": "Name",
                                    "operator": "Include",
                                    "values": [
                                        "WaitTrueChangedDataType"
                                    ]
                                },
                                {
                                    "name": "PipelineName",
                                    "operator": "Include",
                                    "values": [
                                        "Covid_Tracking_DefinitiveHC_With_Sql_Sink"
                                    ]
                                },
                                {
                                    "name": "FailureType",
                                    "operator": "Include",
                                    "values": [
                                        "none"
                                    ]
                                }
                            ],
                            "operator": "GreaterThanOrEqual",
                            "timeAggregation": "Average",
                            "criterionType": "StaticThresholdCriterion"
                        }
                    ],
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "targetResourceType": "microsoft.datafactory/factories",
                "actions": [
                    {
                        "actionGroupId": "[resourceId('microsoft.insights/actionGroups', parameters('actionGroupsName'))]",
                        "webHookProperties": {}
                    }
                ]
            }
        },
         {
            "type": "microsoft.insights/actionGroups",
            "apiVersion": "2019-03-01",
            "name": "[parameters('actionGroupsName')]",
            "location": "Global",
            "properties": {
                "groupShortName": "asad",
                "enabled": true,
                "emailReceivers": [
                    {
                        "name": "AlertsOnEmail",
                        "emailAddress": "[parameters('emailForAlerts')]",
                        "useCommonAlertSchema": false
                    }
                ],
                "smsReceivers": [],
                "webhookReceivers": [
                    {
                        "name": "microsoftTeamsNotifications",
                        "serviceUri":"[listCallbackURL(concat(resourceId('Microsoft.Logic/workflows', parameters('appLogicName')), '/triggers/manual'), '2016-10-01').value]",
                        "useCommonAlertSchema": false
                    }
                ],
                "itsmReceivers": [],
                "azureAppPushReceivers": [],
                "automationRunbookReceivers": [],
                "voiceReceivers": [],
                "logicAppReceivers": [],
                "azureFunctionReceivers": []
            },
            "dependsOn": [
                "[parameters('factoryName')]",
                "[concat(variables('factoryId'), '/datasets/rest_source_dataset')]",
                "[concat(variables('factoryId'), '/datasets/source_csv_dataset')]",
                "[concat(variables('factoryId'), '/dataflows/Transformations_without_SQL_sink')]",
                "[concat(variables('factoryId'), '/datasets/json_dataset')]"
            ]
        }
  ]
}
